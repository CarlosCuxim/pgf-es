name: Release

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/islandoftex/images/texlive:latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate the revision file
      run: |
        export tagname=$(git describe --abbrev=0 --tags)
        export revision=$(git describe --tags)
        export tagdate=$(git log -n 1 "$tagname" --pretty=format:%cs)
        export revisiondate=$(git log -n 1 "$revision" --pretty=format:%cs)
        l3build tag --date "$tagdate" "$tagname"
        cat tex/generic/pgf/pgf.revision.tex
        echo "tagname=$tagname" >> $GITHUB_ENV

    - name: l3build ctan
      run: |
        l3build ctan
        # rename zips
        cp "pgf.tds.zip" "pgf_${tagname}.tds.zip"
        cp "pgf.ctan.flatdir.zip" "pgf_${tagname}.ctan.flatdir.zip"

    - uses: actions/upload-artifact@v2
      with:
        name: pgfmanual
        path: build/doc/pgfmanual.pdf

    - name: "ZIP: Sign"
      env:
        GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
      run: |
        # get the keys
        printenv GPG_SECRET_KEY > "pgf-${tagname}.sec"
        printenv GPG_PUBLIC_KEY > "pgf-${tagname}.pub"
        export GNUPGHOME=$(mktemp -d)
        install -dm 0700 "$GNUPGHOME"
        gpg --import "pgf-${tagname}.sec"
        gpg --armor --output "pgf_${tagname}.tds.zip.sig" --detach-sign "pgf_${tagname}.tds.zip"
        gpg --armor --output "pgf_${tagname}.ctan.flatdir.zip.sig" --detach-sign "pgf_${tagname}.ctan.flatdir.zip"
        rm -rf "$GNUPGHOME"
        # verify the signature against the distributed public key
        export GNUPGHOME=$(mktemp -d)
        install -dm 0700 "$GNUPGHOME"
        gpg --import "pgf-${tagname}.pub"
        gpg --verify "pgf_${tagname}.tds.zip.sig"
        gpg --verify "pgf_${tagname}.ctan.flatdir.zip.sig"
        rm -rf "$GNUPGHOME"

    - name: "Release: create"
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tagname }}
        release_name: ${{ env.tagname }}
        body_path: doc/generic/pgf/RELEASE_NOTES.md

    - name: "Release: upload manual"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/doc/pgfmanual.pdf
        asset_name: pgfmanual-${{ env.tagname }}.pdf
        asset_content_type: application/pdf

    - name: "Release: upload public key"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pgf-${{ env.tagname }}.pub
        asset_name: pgf-${{ env.tagname }}.pub
        asset_content_type: text/plain

    - name: "Release: upload TDS zip"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pgf_${{ env.tagname }}.tds.zip
        asset_name: pgf_${{ env.tagname }}.tds.zip
        asset_content_type: application/zip

    - name: "Release: upload TDS signature"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pgf_${{ env.tagname }}.tds.zip.sig
        asset_name: pgf_${{ env.tagname }}.tds.zip.sig
        asset_content_type: text/plain

    - name: "Release: upload CTAN zip"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pgf_${{ env.tagname }}.ctan.flatdir.zip
        asset_name: pgf_${{ env.tagname }}.ctan.flatdir.zip
        asset_content_type: application/zip

    - name: "Release: upload CTAN signature"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pgf_${{ env.tagname }}.ctan.flatdir.zip.sig
        asset_name: pgf_${{ env.tagname }}.ctan.flatdir.zip.sig
        asset_content_type: text/plain

    - name: "CTAN: Prepare fields"
      run: |
        cat <<'EOF' | tee CTAN_NOTES.md
        The release files are signed using a detached signature.  You can obtain the
        signature from the GitHub release page

            https://github.com/pgf-tikz/pgf/releases/download/${{ env.tagname }}/pgf_${{ env.tagname }}.ctan.flatdir.zip.sig
        EOF

    - name: "CTAN: Validate"
      run: |
        l3build upload --dry-run "$tagname"

    - name: "CTAN: Upload"
      if: github.repository == 'pgf-tikz/pgf'
      run: |
        l3build upload "$tagname"
